前端:
1.扫描源码,得到所有的变量
2.再次扫描源码,得到IL
后端:
1.后端处理class文件,判断语法树的类型使用是否正确(回填类型,泛型在实例化的时候回填),检测循环继承和值类型循环包含
2.执行(解释执行、jit、aot)


1.每个参数直接复制一遍
2.类型推导(处理循环推导+类型检查[bool=1+1这种要报错])
3.把所有的引用换成this,super
4.检查返回值
5.bolck里面的变量声明在parse的时候没有作重复性检查，需要在处理AST的时候检查

1.闭包创建,处理所有
2.把内层嵌套的fucntion剥离出去,在全局空间中注册


function f(a:int){

}

function f(@a:int){
    var a:int=@a;//对被闭包捕获的变量采用同样的处理规则
}