valuetype class MyClass{
    var value=55;
    MyClass(){}
    function bar(){
        printI32(value);
    };
}
function foo(){
    var i:MyClass;
    return i.bar;
};
function f2(v:int){
    printI32(v);
};
class MyClass2{
    var i=10;
    MyClass2(v:int){
        if(v>5){
            i=100;
            return;
        }else{
            i=0;
            return;
        }
    }
}
function main(){
    var obj=new MyClass2(6);
    printI32(obj.i);
};

extension function bar(this int v){
    printI32(v);
}



function printI32(v:int):void{
    native
};
function printI8(v:bool):void{
    native
};
valuetype class int{
    operator + ( v : int ) : int { native } ;
    operator - ( v : int ) : int { native } ;
    operator * ( v : int ) : int { native } ;
    operator / ( v : int ) : int { native } ;
    operator ++ () : void { native } ;
    operator -- () : void { native } ;
    operator < ( v : int ) : bool { native } ;
    operator <= ( v : int ) : bool { native } ;
    operator > ( v : int ) : bool { native } ;
    operator >= ( v : int ) : bool { native } ;
}
valuetype class bool{
}

