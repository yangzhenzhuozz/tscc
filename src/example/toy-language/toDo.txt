1.模板只允许program范围内的class和function定义，任何其他位置的模板都被拒绝(已经实现)
2.在阶段二跳过模板定义的扫描
3.只有在特化的时候，单独生成一个模板类或者模板函数，然后进行扫描


待完成:
-   闭包目前有问题
-   对于this的读取有问题，测试一下构造函数和普通成员函数
-   跨越多层的闭包捕获,要让每一层都捕获
-   函数参数顺序不对

-   test_4.ty 没有正确生成<判断指令
-   应该在nodeRecursion的出口检测是有trueList或者falseList，不能在使用的时候检测，否则总有遗漏的时候  //从实现上来说，必须要在使用的时候才能检查trueList和falseList
-   <的判断好像没问题
-   仔细检测 ||、&&、ternary 对boolNot的处理

-   newArray没有new完的情况没有考虑,即 var arr:int[][][]=new int[1][][];
-   数组的length还没有实现

-   模板特化

-   引用类型扩展方法
-   值类型扩展方法

-   右值值类型成员访问

-   访问局部变量成员函数的扩展方法时，没有正确捕获这个成员
    var a=10;
    a.toString();
    如果a被释放，则会出错
    function f(){
        var i=6;
        return i.toString;
    }
    f().toString();
-   不止是扩展方法，访问值类型的成员也是一样的，应该这样做，只要返回局部变量的成员函数时，通通装箱，如果返回普通成员则不装箱()
    不是返回，而是只要使用了值类型的成员，一律装箱
    function f(para:int){
        var i=5;
        var j=6;
        var f1=i.toString;
        var f2=j.toString;
        if(para>5)
            return f1;
        else
            return f2;
    }
    这种情况下根本无法追踪

-   如果break不在bock中，能否正确跳出
-   (1+2).toString是否正确装箱
-   创建构造函数时需要指定inContructor        //我忘了这是啥，为什么要记这一行,很早之前生成构造函数代码已经指定了

-   确认嵌套在block中的break、continue、ret是否弹出数量正确的frame
-   unwind的顺序反了
-   unwinding目前设计的不够好，需要在pop_stack_frame的时候由vm搜索，改为每次alloc的时候自动判断是否需要往frameStack压unwinded函数(处理一下def节点即可)
-   对每个block（即StackFrame）记录autounwinding,每次popup_frame的时候检查是否有需要自动释放的对象 //由 pop_stack_map实现了

-   抛出异常的时候需要执行stack unwinding
-   嵌套unwind（即close函数内部还有unwind）
-   null==obj
    obj==null


-   getField已经实现空指针异常
-   测试抛出异常时unwind是否正确(即声明了三个，实际上只初始化了两个的情况)
-   call指令、数组访问指令还没有做，检查所有的虚拟机指令，确认是否使用了指针

-   除0、类型转换、数组越界异常还没有做

-   test_21.ty 崩溃，检查原因  //VM栈回退不正确，已解决 2023-02-07 00:44:16

-   需要添加 % ~ ^ & | >> <<这几种运算符 //test_22.ty 基本运算符已经添加完成，2023-02-07 21:02:09
-   运算符重载 2023-02-07 23:27:45
-   test_23.ty崩溃 2023-02-07 23:28:04  //经过确认，是新增的negative和positive没有正确设置isRightValue，已经修复 2023-02-08 00:54:08
-   修复val，新增private关键字 2023-02-14 22:40:14