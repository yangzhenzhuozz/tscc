1.模板只允许program范围内的class和function定义，任何其他位置的模板都被拒绝(已经实现)
2.在阶段二跳过模板定义的扫描
3.只有在特化的时候，单独生成一个模板类或者模板函数，然后进行扫描


待完成:
-   闭包目前有问题
-   对于this的读取又问题，测试一下构造函数和普通成员函数
-   跨越多层的闭包捕获,要让每一层都捕获
-   函数参数顺序不对

-   test_4.ty 没有正确生成<判断指令
-   应该在nodeRecursion的出口检测是有trueList或者falseList，不能在使用的时候检测，否则总有遗漏的时候
-   <的判断好像没问题
-   仔细检测 ||、&&、ternary 对boolNot的处理

-   newArray没有new完的情况没有考虑,即 var arr:int[][][]=new int[1][][];
-   数组的length还没有实现

-   模板特化

-   引用类型扩展方法
-   值类型扩展方法

-   右值值类型成员访问

-   访问局部变量成员函数的扩展方法时，没有正确捕获这个成员
    var a=10;
    a.toString();
    如果a被释放，则会出错
    function f(){
        var i=6;
        return i.toString;
    }
    f().toString();
-   不止是扩展方法，访问值类型的成员也是一样的，应该这样做，只要返回局部变量的成员函数时，通通装箱，如果返回普通成员则不装箱()
    不是返回，而是只要使用了值类型的成员，一律装箱
    function f(para:int){
        var i=5;
        var j=6;
        var f1=i.toString;
        var f2=j.toString;
        if(para>5)
            return f1;
        else
            return f2;
    }
    这种情况下根本无法追踪

+   创建构造函数是需要指定inContructor